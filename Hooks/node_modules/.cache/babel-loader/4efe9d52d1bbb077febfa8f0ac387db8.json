{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst Checkout = props => {\n  const cancelHandler = () => {\n    props.history.goBack();\n  };\n\n  const continueHandler = () => {\n    props.history.replace('/checkout/contact-data');\n  };\n\n  const contactData = props => React.createElement(ContactData, Object.assign({\n    ingredients: props.ingredients,\n    price: props.price\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n\n  let checkout = React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n\n  if (Object.keys(props.ingredients).length && !props.purchased) {\n    checkout = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CheckoutSummary, {\n      ingredients: props.ingredients,\n      cancelling: cancelHandler,\n      continuing: continueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: props.match.url + '/contact-data',\n      render: props => contactData(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n  return checkout;\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.price,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","Redirect","connect","CheckoutSummary","ContactData","Checkout","props","cancelHandler","history","goBack","continueHandler","replace","contactData","ingredients","price","checkout","Object","keys","length","purchased","match","url","mapStateToProps","state","burgerBuilder","order"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,aAAa,GAAG,MAAM;AACxBD,IAAAA,KAAK,CAACE,OAAN,CAAcC,MAAd;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BJ,IAAAA,KAAK,CAACE,OAAN,CAAcG,OAAd,CAAsB,wBAAtB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIN,KAAD,IAChB,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEA,KAAK,CAACO,WAAhC;AAA6C,IAAA,KAAK,EAAEP,KAAK,CAACQ;AAA1D,KAAqER,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAIA,MAAIS,QAAQ,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYX,KAAK,CAACO,WAAlB,EAA+BK,MAA/B,IAAyC,CAACZ,KAAK,CAACa,SAApD,EAA+D;AAC3DJ,IAAAA,QAAQ,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAET,KAAK,CAACO,WADvB;AAEI,MAAA,UAAU,EAAEN,aAFhB;AAGI,MAAA,UAAU,EAAEG,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAEJ,KAAK,CAACc,KAAN,CAAYC,GAAZ,GAAkB,eAD5B;AAEI,MAAA,MAAM,EAAGf,KAAD,IAAWM,WAAW,CAACN,KAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AAED,SAAOS,QAAP;AACH,CAhCD;;AAkCA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,WAAW,EAAEU,KAAK,CAACC,aAAN,CAAoBX,WAD9B;AAEHC,IAAAA,KAAK,EAAES,KAAK,CAACC,aAAN,CAAoBV,KAFxB;AAGHK,IAAAA,SAAS,EAAEI,KAAK,CAACE,KAAN,CAAYN;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\n\nconst Checkout = (props) => {\n    const cancelHandler = () => {\n        props.history.goBack()\n    }\n\n    const continueHandler = () => {\n        props.history.replace('/checkout/contact-data')\n    }\n\n    const contactData = (props) => (\n        <ContactData ingredients={props.ingredients} price={props.price} {...props} />\n    )\n\n    let checkout = <Redirect to='/' />\n\n    if (Object.keys(props.ingredients).length && !props.purchased) {\n        checkout = (\n            <div>\n                <CheckoutSummary\n                    ingredients={props.ingredients}\n                    cancelling={cancelHandler}\n                    continuing={continueHandler}\n                />\n                <Route\n                    path={props.match.url + '/contact-data'}\n                    render={(props) => contactData(props)}\n                />\n            </div>\n        )\n    }\n\n    return checkout\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.price,\n        purchased: state.order.purchased,\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout)\n"]},"metadata":{},"sourceType":"module"}