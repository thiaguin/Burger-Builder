{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport const purchaseBurger = (orderData, token) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER,\n    orderData: orderData,\n    token: token\n  }; // return (dispatch) => {\n  //     dispatch(purchaseBurgerStart())\n  //     axios\n  //         .post('/orders.json?auth=' + token, orderData)\n  //         .then((response) => {\n  //             dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n  //         })\n  //         .catch((error) => {\n  //             dispatch(purchaseBurgerFail())\n  //         })\n  // }\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    fetchedOrders: orders\n  };\n};\nexport const fetchOrdersFail = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL\n  };\n};\nexport const fetchOrders = (token, userId) => {\n  return {\n    type: actionTypes.FETCH_ORDERS,\n    token: token,\n    userId: userId\n  }; // return (dispatch) => {\n  //     dispatch(fetchOrdersStart())\n  //     const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\n  //     axios\n  //         .get('/orders.json' + queryParams)\n  //         .then((res) => {\n  //             dispatch(fetchOrdersSuccess(res.data))\n  //         })\n  //         .catch(() => {\n  //             dispatch(fetchOrdersFail())\n  //         })\n  // }\n};","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Saga/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","PURCHASE_BURGER","purchaseInit","PURCHASE_INIT","fetchOrdersStart","FETCH_ORDERS_START","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchedOrders","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrders","userId","FETCH_ORDERS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADf;AAEHC,IAAAA,OAAO,EAAEJ,EAFN;AAGHC,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAKH,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEL,WAAW,CAACS;AADf,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHL,IAAAA,IAAI,EAAEL,WAAW,CAACW;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACR,SAAD,EAAYS,KAAZ,KAAsB;AAChD,SAAO;AACHR,IAAAA,IAAI,EAAEL,WAAW,CAACc,eADf;AAEHV,IAAAA,SAAS,EAAEA,SAFR;AAGHS,IAAAA,KAAK,EAAEA;AAHJ,GAAP,CADgD,CAMhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAjBM;AAmBP,OAAO,MAAME,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHV,IAAAA,IAAI,EAAEL,WAAW,CAACgB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHZ,IAAAA,IAAI,EAAEL,WAAW,CAACkB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AAC1C,SAAO;AACHf,IAAAA,IAAI,EAAEL,WAAW,CAACqB,oBADf;AAEHC,IAAAA,aAAa,EAAEF;AAFZ,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACjC,SAAO;AACHlB,IAAAA,IAAI,EAAEL,WAAW,CAACwB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACZ,KAAD,EAAQa,MAAR,KAAmB;AAC1C,SAAO;AACHrB,IAAAA,IAAI,EAAEL,WAAW,CAAC2B,YADf;AAEHd,IAAAA,KAAK,EAAEA,KAFJ;AAGHa,IAAAA,MAAM,EAAEA;AAHL,GAAP,CAD0C,CAM1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAlBM","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders'\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData,\n    }\n}\n\nexport const purchaseBurgerFail = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n    }\n}\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START,\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER,\n        orderData: orderData,\n        token: token,\n    }\n    // return (dispatch) => {\n    //     dispatch(purchaseBurgerStart())\n    //     axios\n    //         .post('/orders.json?auth=' + token, orderData)\n    //         .then((response) => {\n    //             dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n    //         })\n    //         .catch((error) => {\n    //             dispatch(purchaseBurgerFail())\n    //         })\n    // }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT,\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        fetchedOrders: orders,\n    }\n}\nexport const fetchOrdersFail = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return {\n        type: actionTypes.FETCH_ORDERS,\n        token: token,\n        userId: userId,\n    }\n    // return (dispatch) => {\n    //     dispatch(fetchOrdersStart())\n    //     const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\n    //     axios\n    //         .get('/orders.json' + queryParams)\n    //         .then((res) => {\n    //             dispatch(fetchOrdersSuccess(res.data))\n    //         })\n    //         .catch(() => {\n    //             dispatch(fetchOrdersFail())\n    //         })\n    // }\n}\n"]},"metadata":{},"sourceType":"module"}