{"ast":null,"code":"import { put, delay } from 'redux-saga/effects';\nimport * as actions from '../actions/index';\nimport axios from 'axios';\nexport function* logoutSaga(action) {\n  yield localStorage.removeItem('token');\n  yield localStorage.removeItem('expirationDate');\n  yield localStorage.removeItem('userId');\n  yield put(actions.authLogoutSucceed);\n}\nexport function* authLogoutAsyncSaga(action) {\n  yield delay(action.expiresTime * 1000);\n  yield put(actions.authLogout());\n}\nexport function* authSaga(action) {\n  const authData = {\n    email: action.username,\n    password: action.password,\n    returnSecureToken: true\n  };\n  const signUpUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDKbV6ttrbEDvWY4e2YCUo-ST6GxKX8lAY';\n  const signInUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDKbV6ttrbEDvWY4e2YCUo-ST6GxKX8lAY';\n  const url = action.isSignIn ? signInUrl : signUpUrl;\n\n  try {\n    yield put(actions.authStart());\n    const response = yield axios.post(url, authData);\n    yield put(actions.authSuccess(response.data));\n    yield put(actions.authLogoutAsync(response.data.expiresIn));\n  } catch (error) {\n    yield put(actions.authFail(error.response.data.error.message));\n  }\n}","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Saga/src/store/sagas/auth.js"],"names":["put","delay","actions","axios","logoutSaga","action","localStorage","removeItem","authLogoutSucceed","authLogoutAsyncSaga","expiresTime","authLogout","authSaga","authData","email","username","password","returnSecureToken","signUpUrl","signInUrl","url","isSignIn","authStart","response","post","authSuccess","data","authLogoutAsync","expiresIn","error","authFail","message"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,oBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAChC,QAAMC,YAAY,CAACC,UAAb,CAAwB,OAAxB,CAAN;AACA,QAAMD,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAN;AACA,QAAMD,YAAY,CAACC,UAAb,CAAwB,QAAxB,CAAN;AAEA,QAAMP,GAAG,CAACE,OAAO,CAACM,iBAAT,CAAT;AACH;AAED,OAAO,UAAUC,mBAAV,CAA8BJ,MAA9B,EAAsC;AACzC,QAAMJ,KAAK,CAACI,MAAM,CAACK,WAAP,GAAqB,IAAtB,CAAX;AACA,QAAMV,GAAG,CAACE,OAAO,CAACS,UAAR,EAAD,CAAT;AACH;AAED,OAAO,UAAUC,QAAV,CAAmBP,MAAnB,EAA2B;AAC9B,QAAMQ,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAET,MAAM,CAACU,QADD;AAEbC,IAAAA,QAAQ,EAAEX,MAAM,CAACW,QAFJ;AAGbC,IAAAA,iBAAiB,EAAE;AAHN,GAAjB;AAKA,QAAMC,SAAS,GACX,uGADJ;AAEA,QAAMC,SAAS,GACX,mHADJ;AAGA,QAAMC,GAAG,GAAGf,MAAM,CAACgB,QAAP,GAAkBF,SAAlB,GAA8BD,SAA1C;;AAEA,MAAI;AACA,UAAMlB,GAAG,CAACE,OAAO,CAACoB,SAAR,EAAD,CAAT;AAEA,UAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAWJ,GAAX,EAAgBP,QAAhB,CAAvB;AAEA,UAAMb,GAAG,CAACE,OAAO,CAACuB,WAAR,CAAoBF,QAAQ,CAACG,IAA7B,CAAD,CAAT;AACA,UAAM1B,GAAG,CAACE,OAAO,CAACyB,eAAR,CAAwBJ,QAAQ,CAACG,IAAT,CAAcE,SAAtC,CAAD,CAAT;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAM7B,GAAG,CAACE,OAAO,CAAC4B,QAAR,CAAiBD,KAAK,CAACN,QAAN,CAAeG,IAAf,CAAoBG,KAApB,CAA0BE,OAA3C,CAAD,CAAT;AACH;AACJ","sourcesContent":["import { put, delay } from 'redux-saga/effects'\nimport * as actions from '../actions/index'\nimport axios from 'axios'\n\nexport function* logoutSaga(action) {\n    yield localStorage.removeItem('token')\n    yield localStorage.removeItem('expirationDate')\n    yield localStorage.removeItem('userId')\n\n    yield put(actions.authLogoutSucceed)\n}\n\nexport function* authLogoutAsyncSaga(action) {\n    yield delay(action.expiresTime * 1000)\n    yield put(actions.authLogout())\n}\n\nexport function* authSaga(action) {\n    const authData = {\n        email: action.username,\n        password: action.password,\n        returnSecureToken: true,\n    }\n    const signUpUrl =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDKbV6ttrbEDvWY4e2YCUo-ST6GxKX8lAY'\n    const signInUrl =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDKbV6ttrbEDvWY4e2YCUo-ST6GxKX8lAY'\n\n    const url = action.isSignIn ? signInUrl : signUpUrl\n\n    try {\n        yield put(actions.authStart())\n\n        const response = yield axios.post(url, authData)\n\n        yield put(actions.authSuccess(response.data))\n        yield put(actions.authLogoutAsync(response.data.expiresIn))\n    } catch (error) {\n        yield put(actions.authFail(error.response.data.error.message))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}