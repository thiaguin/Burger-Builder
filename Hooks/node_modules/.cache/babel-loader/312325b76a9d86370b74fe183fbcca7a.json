{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nconst Orders = props => {\n  const token = useSelector(state => state.auth.token);\n  const userId = useSelector(state => state.auth.userId);\n  const dispatch = useDispatch();\n  const onFetchOrders = useCallback((token, userId) => dispatch(actions.fetchOrders(token, userId)), [dispatch]);\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, [token, userId, onFetchOrders]);\n  let orders = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n  const isAuth = !!token;\n\n  if (!props.loading && isAuth) {\n    orders = props.orders.map(order => {\n      return React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, orders);\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nexport default connect(mapStateToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js"],"names":["React","useEffect","useCallback","connect","useDispatch","useSelector","Order","Spinner","axios","withErrorHandler","actions","Orders","props","token","state","auth","userId","dispatch","onFetchOrders","fetchOrders","orders","isAuth","loading","map","order","id","ingredients","price","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,KAAvB,CAAzB;AACA,QAAMG,MAAM,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,MAAvB,CAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,aAAa,GAAGhB,WAAW,CAC7B,CAACW,KAAD,EAAQG,MAAR,KAAmBC,QAAQ,CAACP,OAAO,CAACS,WAAR,CAAoBN,KAApB,EAA2BG,MAA3B,CAAD,CADE,EAE7B,CAACC,QAAD,CAF6B,CAAjC;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,aAAa,CAACL,KAAD,EAAQG,MAAR,CAAb;AACH,GAFQ,EAEN,CAACH,KAAD,EAAQG,MAAR,EAAgBE,aAAhB,CAFM,CAAT;AAIA,MAAIE,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;AACA,QAAMC,MAAM,GAAG,CAAC,CAACR,KAAjB;;AAEA,MAAI,CAACD,KAAK,CAACU,OAAP,IAAkBD,MAAtB,EAA8B;AAC1BD,IAAAA,MAAM,GAAGR,KAAK,CAACQ,MAAN,CAAaG,GAAb,CAAkBC,KAAD,IAAW;AACjC,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,QAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,QAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFQ,CAAT;AAGH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,MAAN,CAAP;AACH,CAxBD;;AA0BA,MAAMQ,eAAe,GAAId,KAAD,IAAW;AAC/B,SAAO;AACHM,IAAAA,MAAM,EAAEN,KAAK,CAACU,KAAN,CAAYJ,MADjB;AAEHE,IAAAA,OAAO,EAAER,KAAK,CAACU,KAAN,CAAYF;AAFlB,GAAP;AAIH,CALD;;AAOA,eAAenB,OAAO,CAACyB,eAAD,CAAP,CAAyBnB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAAzC,CAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nconst Orders = (props) => {\n    const token = useSelector((state) => state.auth.token)\n    const userId = useSelector((state) => state.auth.userId)\n    const dispatch = useDispatch()\n\n    const onFetchOrders = useCallback(\n        (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n        [dispatch]\n    )\n\n    useEffect(() => {\n        onFetchOrders(token, userId)\n    }, [token, userId, onFetchOrders])\n\n    let orders = <Spinner />\n    const isAuth = !!token\n\n    if (!props.loading && isAuth) {\n        orders = props.orders.map((order) => {\n            return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n        })\n    }\n\n    return <div>{orders}</div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n    }\n}\n\nexport default connect(mapStateToProps)(withErrorHandler(Orders, axios))\n"]},"metadata":{},"sourceType":"module"}