{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nconst orders = props => {\n  useEffect(() => {\n    props.onFetchOrders(props.token, props.userId);\n  }, [props]);\n  let orders = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n\n  if (!props.loading) {\n    orders = props.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, orders);\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js"],"names":["React","useEffect","connect","Order","axios","withErrorHandler","actions","Spinner","orders","props","onFetchOrders","token","userId","loading","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtBR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,KAA1B,EAAiCF,KAAK,CAACG,MAAvC;AACH,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;AAIA,MAAID,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AACA,MAAI,CAACC,KAAK,CAACI,OAAX,EAAoB;AAChBL,IAAAA,MAAM,GAAGC,KAAK,CAACD,MAAN,CAAaM,GAAb,CAAkBC,KAAD,IACtB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,MAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAT;AAGH;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,MAAN,CAAP;AACH,CAZD;;AAcA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHZ,IAAAA,MAAM,EAAEY,KAAK,CAACL,KAAN,CAAYP,MADjB;AAEHK,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF,OAFlB;AAGHF,IAAAA,KAAK,EAAES,KAAK,CAACC,IAAN,CAAWV,KAHf;AAIHC,IAAAA,MAAM,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AAJhB,GAAP;AAMH,CAPD;;AASA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHb,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBW,QAAQ,CAACjB,OAAO,CAACkB,WAAR,CAAoBb,KAApB,EAA2BC,MAA3B,CAAD;AADvC,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA7D,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nconst orders = (props) => {\n    useEffect(() => {\n        props.onFetchOrders(props.token, props.userId)\n    }, [props])\n\n    let orders = <Spinner />\n    if (!props.loading) {\n        orders = props.orders.map((order) => (\n            <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n        ))\n    }\n    return <div>{orders}</div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(orders, axios))\n"]},"metadata":{},"sourceType":"module"}