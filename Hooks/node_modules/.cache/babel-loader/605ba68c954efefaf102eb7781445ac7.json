{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  // componentDidMount() {\n  //     this.props.onFetchOrders(this.props.token, this.props.userId)\n  // }\n  render() {\n    let orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n    const isAuth = !!this.props.token;\n\n    if (isAuth) {\n      this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    if (!this.props.loading && isAuth) {\n      orders = this.props.orders.map(order => {\n        return React.createElement(Order, {\n          key: order.id,\n          ingredients: order.ingredients,\n          price: order.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","Spinner","axios","withErrorHandler","actions","Orders","state","orders","loading","render","isAuth","props","token","onFetchOrders","userId","map","order","id","ingredients","price","mapStateToProps","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BQ,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3B;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL,QAAIF,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,UAAMG,MAAM,GAAG,CAAC,CAAC,KAAKC,KAAL,CAAWC,KAA5B;;AAEA,QAAIF,MAAJ,EAAY;AACR,WAAKC,KAAL,CAAWE,aAAX,CAAyB,KAAKF,KAAL,CAAWC,KAApC,EAA2C,KAAKD,KAAL,CAAWG,MAAtD;AACH;;AAED,QAAI,CAAC,KAAKH,KAAL,CAAWH,OAAZ,IAAuBE,MAA3B,EAAmC;AAC/BH,MAAAA,MAAM,GAAG,KAAKI,KAAL,CAAWJ,MAAX,CAAkBQ,GAAlB,CAAuBC,KAAD,IAAW;AACtC,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,UAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFQ,CAAT;AAGH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMZ,MAAN,CAAP;AACH;;AAzB0B;;AA4B/B,MAAMa,eAAe,GAAId,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACU,KAAN,CAAYT,MADjB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACU,KAAN,CAAYR,OAFlB;AAGHI,IAAAA,KAAK,EAAEN,KAAK,CAACe,IAAN,CAAWT,KAAX,CAAiBE;AAHrB,GAAP;AAKH,CAND;;AAQA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHV,IAAAA,aAAa,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmBS,QAAQ,CAACnB,OAAO,CAACoB,WAAR,CAAoBZ,KAApB,EAA2BE,MAA3B,CAAD;AADvC,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    // componentDidMount() {\n    //     this.props.onFetchOrders(this.props.token, this.props.userId)\n    // }\n\n    render() {\n        let orders = <Spinner />\n        const isAuth = !!this.props.token\n\n        if (isAuth) {\n            this.props.onFetchOrders(this.props.token, this.props.userId)\n        }\n\n        if (!this.props.loading && isAuth) {\n            orders = this.props.orders.map((order) => {\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n            })\n        }\n\n        return <div>{orders}</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token.userId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))\n"]},"metadata":{},"sourceType":"module"}