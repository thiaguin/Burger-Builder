{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/hoc/withErrorHandler.js\";\nimport React, { useState, useEffect } from 'react';\nimport Aux from './Aux';\nimport Modal from '../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return props => {\n    const {\n      request,\n      response\n    } = axios.interceptors;\n    const [error, setError] = useState(null);\n    const reqInterceptor = axios.interceptors.request.use(req => {\n      setError(null);\n      return req;\n    });\n    const resInterceptor = axios.interceptors.response.use(res => res, err => {\n      console.log('safkjs', err);\n      console.log('res', res);\n      setError(err);\n    });\n    useEffect(() => {\n      return () => {\n        request.eject(reqInterceptor);\n      };\n    }, [request, reqInterceptor]);\n    useEffect(() => {\n      return () => {\n        response.eject(resInterceptor);\n      };\n    }, [response, resInterceptor]);\n\n    const closeErrorHandler = () => {\n      setError(null);\n    };\n\n    console.log('error', error);\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: error,\n      closing: closeErrorHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, error ? error.message : null), React.createElement(WrappedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/hoc/withErrorHandler.js"],"names":["React","useState","useEffect","Aux","Modal","withErrorHandler","WrappedComponent","axios","props","request","response","interceptors","error","setError","reqInterceptor","use","req","resInterceptor","res","err","console","log","eject","closeErrorHandler","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAClD,SAAQC,KAAD,IAAW;AACd,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAwBH,KAAK,CAACI,YAApC;AACA,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEA,UAAMa,cAAc,GAAGP,KAAK,CAACI,YAAN,CAAmBF,OAAnB,CAA2BM,GAA3B,CAAgCC,GAAD,IAAS;AAC3DH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,aAAOG,GAAP;AACH,KAHsB,CAAvB;AAKA,UAAMC,cAAc,GAAGV,KAAK,CAACI,YAAN,CAAmBD,QAAnB,CAA4BK,GAA5B,CAClBG,GAAD,IAASA,GADU,EAElBC,GAAD,IAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACAL,MAAAA,QAAQ,CAACM,GAAD,CAAR;AACH,KANkB,CAAvB;AASAjB,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAO,MAAM;AACTO,QAAAA,OAAO,CAACa,KAAR,CAAcR,cAAd;AACH,OAFD;AAGH,KAJQ,EAIN,CAACL,OAAD,EAAUK,cAAV,CAJM,CAAT;AAMAZ,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAO,MAAM;AACTQ,QAAAA,QAAQ,CAACY,KAAT,CAAeL,cAAf;AACH,OAFD;AAGH,KAJQ,EAIN,CAACP,QAAD,EAAWO,cAAX,CAJM,CAAT;;AAMA,UAAMM,iBAAiB,GAAG,MAAM;AAC5BV,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD;;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;AACA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,KAAb;AAAoB,MAAA,OAAO,EAAEW,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,KAAK,GAAGA,KAAK,CAACY,OAAT,GAAmB,IAD7B,CADJ,EAII,oBAAC,gBAAD,oBAAsBhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,CADJ;AAQH,GA1CD;AA2CH,CA5CD;;AA8CA,eAAeH,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Aux from './Aux'\nimport Modal from '../components/UI/Modal/Modal'\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return (props) => {\n        const { request, response } = axios.interceptors\n        const [error, setError] = useState(null)\n\n        const reqInterceptor = axios.interceptors.request.use((req) => {\n            setError(null)\n            return req\n        })\n\n        const resInterceptor = axios.interceptors.response.use(\n            (res) => res,\n            (err) => {\n                console.log('safkjs', err)\n                console.log('res', res)\n                setError(err)\n            }\n        )\n\n        useEffect(() => {\n            return () => {\n                request.eject(reqInterceptor)\n            }\n        }, [request, reqInterceptor])\n\n        useEffect(() => {\n            return () => {\n                response.eject(resInterceptor)\n            }\n        }, [response, resInterceptor])\n\n        const closeErrorHandler = () => {\n            setError(null)\n        }\n        console.log('error', error)\n        return (\n            <Aux>\n                <Modal show={error} closing={closeErrorHandler}>\n                    {error ? error.message : null}\n                </Modal>\n                <WrappedComponent {...props} />\n            </Aux>\n        )\n    }\n}\n\nexport default withErrorHandler\n"]},"metadata":{},"sourceType":"module"}