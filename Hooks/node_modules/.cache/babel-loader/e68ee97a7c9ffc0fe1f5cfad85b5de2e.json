{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    cheese: 0,\n    bacon: 0,\n    salad: 0,\n    meat: 0\n  },\n  price: 4,\n  purchasable: false\n};\nconst INGREDIENTS_PRICE = {\n  salad: 1,\n  cheese: 1,\n  bacon: 1.5,\n  meat: 2\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const addedState = { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        price: state.price + INGREDIENTS_PRICE[action.ingredientName]\n      };\n      const sum = Object.values(addedState.ingredients).reduce((sum, el) => sum += el, 0);\n      addedState.purchasable = sum > 0;\n      return addedState;\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const qntIngredient = state.ingredients[action.ingredientName];\n      const priceUpdated = state.price - INGREDIENTS_PRICE[action.ingredientName];\n      const removedState = { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: qntIngredient > 0 ? qntIngredient - 1 : 0\n        },\n        price: qntIngredient > 0 ? priceUpdated : state.price\n      };\n      const sumR = Object.values(removedState.ingredients).reduce((sum, el) => sum += el, 0);\n      removedState.purchasable = sumR > 0;\n      return removedState;\n\n    default:\n      return { ...state,\n        ingredients: { ...state.ingredients\n        }\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","cheese","bacon","salad","meat","price","purchasable","INGREDIENTS_PRICE","reducer","state","action","type","ADD_INGREDIENT","addedState","ingredientName","sum","Object","values","reduce","el","REMOVE_INGREDIENT","qntIngredient","priceUpdated","removedState","sumR"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,KAAK,EAAE,CAFE;AAGTC,IAAAA,KAAK,EAAE,CAHE;AAITC,IAAAA,IAAI,EAAE;AAJG,GADI;AAOjBC,EAAAA,KAAK,EAAE,CAPU;AAQjBC,EAAAA,WAAW,EAAE;AARI,CAArB;AAWA,MAAMC,iBAAiB,GAAG;AACtBJ,EAAAA,KAAK,EAAE,CADe;AAEtBF,EAAAA,MAAM,EAAE,CAFc;AAGtBC,EAAAA,KAAK,EAAE,GAHe;AAItBE,EAAAA,IAAI,EAAE;AAJgB,CAA1B;;AAOA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,YAAMC,UAAU,GAAG,EACf,GAAGJ,KADY;AAEfT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,WAACU,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAF3D,SAFE;AAMfT,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAcE,iBAAiB,CAACG,MAAM,CAACI,cAAR;AANvB,OAAnB;AAQA,YAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcJ,UAAU,CAACb,WAAzB,EAAsCkB,MAAtC,CAA6C,CAACH,GAAD,EAAMI,EAAN,KAAcJ,GAAG,IAAII,EAAlE,EAAuE,CAAvE,CAAZ;AACAN,MAAAA,UAAU,CAACP,WAAX,GAAyBS,GAAG,GAAG,CAA/B;AACA,aAAOF,UAAP;;AACJ,SAAKf,WAAW,CAACsB,iBAAjB;AACI,YAAMC,aAAa,GAAGZ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,CAAtB;AACA,YAAMQ,YAAY,GAAGb,KAAK,CAACJ,KAAN,GAAcE,iBAAiB,CAACG,MAAM,CAACI,cAAR,CAApD;AACA,YAAMS,YAAY,GAAG,EACjB,GAAGd,KADc;AAEjBT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,WAACU,MAAM,CAACI,cAAR,GAAyBO,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,CAApC,GAAwC;AAFxD,SAFI;AAMjBhB,QAAAA,KAAK,EAAEgB,aAAa,GAAG,CAAhB,GAAoBC,YAApB,GAAmCb,KAAK,CAACJ;AAN/B,OAArB;AAQA,YAAMmB,IAAI,GAAGR,MAAM,CAACC,MAAP,CAAcM,YAAY,CAACvB,WAA3B,EAAwCkB,MAAxC,CAA+C,CAACH,GAAD,EAAMI,EAAN,KAAcJ,GAAG,IAAII,EAApE,EAAyE,CAAzE,CAAb;AACAI,MAAAA,YAAY,CAACjB,WAAb,GAA2BkB,IAAI,GAAG,CAAlC;AACA,aAAOD,YAAP;;AACJ;AACI,aAAO,EACH,GAAGd,KADA;AAEHT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT;AADA;AAFV,OAAP;AA5BR;AAmCH,CApCD;;AAsCA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from './actions'\n\nconst initialState = {\n    ingredients: {\n        cheese: 0,\n        bacon: 0,\n        salad: 0,\n        meat: 0,\n    },\n    price: 4,\n    purchasable: false,\n}\n\nconst INGREDIENTS_PRICE = {\n    salad: 1,\n    cheese: 1,\n    bacon: 1.5,\n    meat: 2,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            const addedState = {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n                },\n                price: state.price + INGREDIENTS_PRICE[action.ingredientName],\n            }\n            const sum = Object.values(addedState.ingredients).reduce((sum, el) => (sum += el), 0)\n            addedState.purchasable = sum > 0\n            return addedState\n        case actionTypes.REMOVE_INGREDIENT:\n            const qntIngredient = state.ingredients[action.ingredientName]\n            const priceUpdated = state.price - INGREDIENTS_PRICE[action.ingredientName]\n            const removedState = {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: qntIngredient > 0 ? qntIngredient - 1 : 0,\n                },\n                price: qntIngredient > 0 ? priceUpdated : state.price,\n            }\n            const sumR = Object.values(removedState.ingredients).reduce((sum, el) => (sum += el), 0)\n            removedState.purchasable = sumR > 0\n            return removedState\n        default:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                },\n            }\n    }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}