{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    console.log('orders', this.props.token);\n    this.props.onFetchOrders(this.props.token);\n  }\n\n  render() {\n    let orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => {\n        return React.createElement(Order, {\n          key: order.id,\n          ingredients: order.ingredients,\n          price: order.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: token => dispatch(actions.fetchOrders(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","Spinner","axios","withErrorHandler","actions","Orders","state","orders","loading","componentWillMount","console","log","props","token","onFetchOrders","render","map","order","id","ingredients","price","mapStateToProps","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BQ,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3BC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAAL,CAAWC,KAAjC;AACA,SAAKD,KAAL,CAAWE,aAAX,CAAyB,KAAKF,KAAL,CAAWC,KAApC;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAIR,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;;AAEA,QAAI,CAAC,KAAKK,KAAL,CAAWJ,OAAhB,EAAyB;AACrBD,MAAAA,MAAM,GAAG,KAAKK,KAAL,CAAWL,MAAX,CAAkBS,GAAlB,CAAuBC,KAAD,IAAW;AACtC,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,UAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFQ,CAAT;AAGH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMb,MAAN,CAAP;AACH;;AArB0B;;AAwB/B,MAAMc,eAAe,GAAIf,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACW,KAAN,CAAYV,MADjB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACW,KAAN,CAAYT,OAFlB;AAGHK,IAAAA,KAAK,EAAEP,KAAK,CAACgB,IAAN,CAAWT;AAHf,GAAP;AAKH,CAND;;AAOA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHV,IAAAA,aAAa,EAAGD,KAAD,IAAWW,QAAQ,CAACpB,OAAO,CAACqB,WAAR,CAAoBZ,KAApB,CAAD;AAD/B,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    componentWillMount() {\n        console.log('orders', this.props.token)\n        this.props.onFetchOrders(this.props.token)\n    }\n\n    render() {\n        let orders = <Spinner />\n\n        if (!this.props.loading) {\n            orders = this.props.orders.map((order) => {\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n            })\n        }\n\n        return <div>{orders}</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))\n"]},"metadata":{},"sourceType":"module"}