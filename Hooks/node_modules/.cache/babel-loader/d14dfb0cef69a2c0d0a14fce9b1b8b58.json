{"ast":null,"code":"import * as actionTypes from './actionTypes'; // import axios from 'axios'\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = data => {\n  // const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n  // localStorage.setItem('token', data.idToken)\n  // localStorage.setItem('expirationDate', expirationDate)\n  // localStorage.setItem('userId', data.localId)\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: data.idToken,\n    userId: data.localId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  // localStorage.removeItem('token')\n  // localStorage.removeItem('expirationDate')\n  // localStorage.removeItem('userId')\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT\n  };\n};\nexport const authLogoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogoutAsync = expiresTime => {\n  return {\n    type: actionTypes.AUTH_LOGOUT_ASYNC,\n    expiresTime: expiresTime\n  };\n};\nexport const auth = (username, password, isSignIn) => {\n  return {\n    type: actionTypes.AUTH_USER,\n    username: username,\n    password: password,\n    isSignIn: isSignIn\n  };\n};\nexport const authRedirectPath = path => {\n  return {\n    type: actionTypes.AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheck = () => {\n  return {\n    type: actionTypes.AUTH_CHECK\n  };\n};","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Saga/src/store/actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","data","AUTH_SUCCESS","token","idToken","userId","localId","authFail","error","AUTH_FAIL","authLogout","AUTH_INITIATE_LOGOUT","authLogoutSucceed","AUTH_LOGOUT","authLogoutAsync","expiresTime","AUTH_LOGOUT_ASYNC","auth","username","password","isSignIn","AUTH_USER","authRedirectPath","path","AUTH_REDIRECT_PATH","authCheck","AUTH_CHECK"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC;AACA;AACA;AACA;AAEA,SAAO;AACHH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADf;AAEHC,IAAAA,KAAK,EAAEF,IAAI,CAACG,OAFT;AAGHC,IAAAA,MAAM,EAAEJ,IAAI,CAACK;AAHV,GAAP;AAKH,CAXM;AAaP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,IAAI,EAAEF,WAAW,CAACa,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B;AACA;AACA;AAEA,SAAO;AACHZ,IAAAA,IAAI,EAAEF,WAAW,CAACe;AADf,GAAP;AAGH,CARM;AAUP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHd,IAAAA,IAAI,EAAEF,WAAW,CAACiB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAIC,WAAD,IAAiB;AAC5C,SAAO;AACHjB,IAAAA,IAAI,EAAEF,WAAW,CAACoB,iBADf;AAEHD,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,KAAkC;AAClD,SAAO;AACHtB,IAAAA,IAAI,EAAEF,WAAW,CAACyB,SADf;AAEHH,IAAAA,QAAQ,EAAEA,QAFP;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHC,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,gBAAgB,GAAIC,IAAD,IAAU;AACtC,SAAO;AACHzB,IAAAA,IAAI,EAAEF,WAAW,CAAC4B,kBADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC3B,SAAO;AACH3B,IAAAA,IAAI,EAAEF,WAAW,CAAC8B;AADf,GAAP;AAGH,CAJM","sourcesContent":["import * as actionTypes from './actionTypes'\n// import axios from 'axios'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (data) => {\n    // const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n    // localStorage.setItem('token', data.idToken)\n    // localStorage.setItem('expirationDate', expirationDate)\n    // localStorage.setItem('userId', data.localId)\n\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: data.idToken,\n        userId: data.localId,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const authLogout = () => {\n    // localStorage.removeItem('token')\n    // localStorage.removeItem('expirationDate')\n    // localStorage.removeItem('userId')\n\n    return {\n        type: actionTypes.AUTH_INITIATE_LOGOUT,\n    }\n}\n\nexport const authLogoutSucceed = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const authLogoutAsync = (expiresTime) => {\n    return {\n        type: actionTypes.AUTH_LOGOUT_ASYNC,\n        expiresTime: expiresTime,\n    }\n}\n\nexport const auth = (username, password, isSignIn) => {\n    return {\n        type: actionTypes.AUTH_USER,\n        username: username,\n        password: password,\n        isSignIn: isSignIn,\n    }\n}\n\nexport const authRedirectPath = (path) => {\n    return {\n        type: actionTypes.AUTH_REDIRECT_PATH,\n        path: path,\n    }\n}\n\nexport const authCheck = () => {\n    return {\n        type: actionTypes.AUTH_CHECK,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}