{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nconst BurgerBuilder = props => {\n  const [purchasing, setPurchasing] = useState(false);\n  const dispatch = useDispatch();\n  const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()), [dispatch]);\n  useEffect(() => {\n    onInitIngredients();\n  }, [onInitIngredients]);\n\n  const updatePurchasable = ingredients => {\n    const sum = Object.values(ingredients).reduce((sum, el) => sum += el, 0);\n    return sum > 0;\n  };\n\n  const purchaseHandler = () => {\n    if (props.isAuthenticated) {\n      setPurchasing(true);\n    } else {\n      props.onAuthRedirect('/checkout');\n      props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    props.onInitPurchase();\n    props.history.push('/checkout');\n  };\n\n  const disableInfo = {};\n  let orderSummary = null;\n  let burger = props.error ? React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n\n  if (props.ingredients) {\n    for (const ingredient of Object.keys(props.ingredients)) {\n      disableInfo[ingredient] = props.ingredients[ingredient] <= 0;\n    }\n\n    burger = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      addIngredients: props.onIngredientsAdded,\n      removeIngredients: props.onIngredientsRemoved,\n      disabled: disableInfo,\n      price: props.price,\n      ordered: purchaseHandler,\n      isAuth: props.isAuthenticated,\n      purchasable: updatePurchasable(props.ingredients),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n    orderSummary = React.createElement(OrderSummary, {\n      price: props.price,\n      cancelingPurchase: purchaseCancelHandler,\n      continuingPurchase: purchaseContinueHandler,\n      ingredients: props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: purchasing,\n    closing: purchaseCancelHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, orderSummary), burger);\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.price,\n    purchasable: state.burgerBuilder.purchasable,\n    error: state.burgerBuilder.error,\n    isAuthenticated: !!state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientsAdded: name => dispatch(actions.addIngredient(name)),\n    onIngredientsRemoved: name => dispatch(actions.removeIngredient(name)),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onAuthRedirect: path => dispatch(actions.authRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useEffect","useCallback","connect","useDispatch","useSelector","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","axios","withErrorHandler","actions","BurgerBuilder","props","purchasing","setPurchasing","dispatch","onInitIngredients","initIngredients","updatePurchasable","ingredients","sum","Object","values","reduce","el","purchaseHandler","isAuthenticated","onAuthRedirect","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","disableInfo","orderSummary","burger","error","textAlign","ingredient","keys","onIngredientsAdded","onIngredientsRemoved","price","mapStateToProps","state","burgerBuilder","purchasable","auth","token","mapDispatchToProps","name","addIngredient","removeIngredient","purchaseInit","path","authRedirectPath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nconst BurgerBuilder = (props) => {\n    const [purchasing, setPurchasing] = useState(false)\n    const dispatch = useDispatch()\n    const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()), [dispatch])\n\n    useEffect(() => {\n        onInitIngredients()\n    }, [onInitIngredients])\n\n    const updatePurchasable = (ingredients) => {\n        const sum = Object.values(ingredients).reduce((sum, el) => (sum += el), 0)\n        return sum > 0\n    }\n\n    const purchaseHandler = () => {\n        if (props.isAuthenticated) {\n            setPurchasing(true)\n        } else {\n            props.onAuthRedirect('/checkout')\n            props.history.push('/auth')\n        }\n    }\n\n    const purchaseCancelHandler = () => {\n        setPurchasing(false)\n    }\n\n    const purchaseContinueHandler = () => {\n        props.onInitPurchase()\n        props.history.push('/checkout')\n    }\n\n    const disableInfo = {}\n    let orderSummary = null\n    let burger = props.error ? (\n        <p style={{ textAlign: 'center' }}>Ingredients can't be loaded!</p>\n    ) : (\n        <Spinner />\n    )\n\n    if (props.ingredients) {\n        for (const ingredient of Object.keys(props.ingredients)) {\n            disableInfo[ingredient] = props.ingredients[ingredient] <= 0\n        }\n        burger = (\n            <Aux>\n                <Burger ingredients={props.ingredients} />\n                <BuildControls\n                    addIngredients={props.onIngredientsAdded}\n                    removeIngredients={props.onIngredientsRemoved}\n                    disabled={disableInfo}\n                    price={props.price}\n                    ordered={purchaseHandler}\n                    isAuth={props.isAuthenticated}\n                    purchasable={updatePurchasable(props.ingredients)}\n                />\n            </Aux>\n        )\n\n        orderSummary = (\n            <OrderSummary\n                price={props.price}\n                cancelingPurchase={purchaseCancelHandler}\n                continuingPurchase={purchaseContinueHandler}\n                ingredients={props.ingredients}\n            />\n        )\n    }\n\n    return (\n        <Aux>\n            <Modal show={purchasing} closing={purchaseCancelHandler}>\n                {orderSummary}\n            </Modal>\n            {burger}\n        </Aux>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.price,\n        purchasable: state.burgerBuilder.purchasable,\n        error: state.burgerBuilder.error,\n        isAuthenticated: !!state.auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientsAdded: (name) => dispatch(actions.addIngredient(name)),\n        onIngredientsRemoved: (name) => dispatch(actions.removeIngredient(name)),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onAuthRedirect: (path) => dispatch(actions.authRedirectPath(path)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))\n"]},"metadata":{},"sourceType":"module"}