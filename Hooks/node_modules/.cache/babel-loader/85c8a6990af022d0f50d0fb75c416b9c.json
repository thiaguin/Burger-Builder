{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = state => {\n  return { ...state,\n    purchased: false\n  };\n};\n\nconst purchaseBurgerStart = state => {\n  return { ...state,\n    loading: true\n  };\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  return { ...state,\n    orders: [...state.orders, { ...action.orderData,\n      id: action.orderId\n    }],\n    loading: false,\n    purchased: true\n  };\n};\n\nconst purchaseBurgerFail = state => {\n  return { ...state,\n    loading: false\n  };\n};\n\nconst fetchedOrdersStart = state => {\n  return { ...state,\n    loading: true\n  };\n};\n\nconst fetchedOrdersSuccess = (state, action) => {\n  const orders = [];\n  const data = action.fetchedOrders;\n\n  for (const key in data) {\n    orders.push({ ...data[key],\n      id: key\n    });\n  }\n\n  return { ...state,\n    loading: false,\n    orders: orders\n  };\n};\n\nconst fetchedOrdersFail = state => {\n  return { ...state,\n    loading: false\n  };\n};\n\nconst defaultState = state => {\n  return { ...state\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchedOrdersStart(state);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchedOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchedOrdersFail(state);\n\n    default:\n      return defaultState(state);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Class Based/src/store/reducers/order.js"],"names":["actionTypes","initialState","orders","loading","purchased","purchaseInit","state","purchaseBurgerStart","purchaseBurgerSuccess","action","orderData","id","orderId","purchaseBurgerFail","fetchedOrdersStart","fetchedOrdersSuccess","data","fetchedOrders","key","push","fetchedOrdersFail","defaultState","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n}\n\nconst purchaseInit = (state) => {\n    return {\n        ...state,\n        purchased: false,\n    }\n}\n\nconst purchaseBurgerStart = (state) => {\n    return {\n        ...state,\n        loading: true,\n    }\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    return {\n        ...state,\n        orders: [...state.orders, { ...action.orderData, id: action.orderId }],\n        loading: false,\n        purchased: true,\n    }\n}\n\nconst purchaseBurgerFail = (state) => {\n    return {\n        ...state,\n        loading: false,\n    }\n}\n\nconst fetchedOrdersStart = (state) => {\n    return {\n        ...state,\n        loading: true,\n    }\n}\n\nconst fetchedOrdersSuccess = (state, action) => {\n    const orders = []\n    const data = action.fetchedOrders\n\n    for (const key in data) {\n        orders.push({ ...data[key], id: key })\n    }\n\n    return {\n        ...state,\n        loading: false,\n        orders: orders,\n    }\n}\n\nconst fetchedOrdersFail = (state) => {\n    return {\n        ...state,\n        loading: false,\n    }\n}\n\nconst defaultState = (state) => {\n    return {\n        ...state,\n    }\n}\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return purchaseInit(state)\n        case actionTypes.PURCHASE_BURGER_START:\n            return purchaseBurgerStart(state)\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            return purchaseBurgerSuccess(state, action)\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return purchaseBurgerFail(state)\n        case actionTypes.FETCH_ORDERS_START:\n            return fetchedOrdersStart(state)\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return fetchedOrdersSuccess(state, action)\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return fetchedOrdersFail(state)\n        default:\n            return defaultState(state)\n    }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}