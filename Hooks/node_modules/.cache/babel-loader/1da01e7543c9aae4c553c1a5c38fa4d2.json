{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = data => {\n  const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n  localStorage.setItem('token', data.idToken);\n  localStorage.setItem('expirationDate', expirationDate);\n  localStorage.setItem('userId', data.localId);\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: data.idToken,\n    userId: data.localId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  // localStorage.removeItem('token')\n  // localStorage.removeItem('expirationDate')\n  // localStorage.removeItem('userId')\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT\n  };\n};\nexport const authLogoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogoutAsync = expiresTime => {\n  return {\n    type: actionTypes.AUTH_LOGOUT_ASYNC,\n    expiresTime: expiresTime\n  }; // return (dispatch) => {\n  // setTimeout(() => dispatch(authLogout()), expiresTime * 1000)\n  // }\n};\nexport const auth = (username, password, isSignIn) => {\n  return {\n    type: actionTypes.AUTH_USER,\n    username: username,\n    password: password,\n    isSignIn: isSignIn\n  };\n};\nexport const authRedirectPath = path => {\n  return {\n    type: actionTypes.AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheck = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      const dateNow = new Date();\n\n      if (expirationDate > dateNow) {\n        const expiresIn = (expirationDate.getTime() - dateNow.getTime()) / 1000;\n        const data = {\n          localId: localStorage.getItem('userId'),\n          idToken: token,\n          expiresIn: expiresIn\n        };\n        dispatch(authSuccess(data));\n        dispatch(authLogoutAsync(expiresIn));\n      } else {\n        dispatch(authLogout());\n      }\n    } else {\n      dispatch(authLogout());\n    }\n  };\n};","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Saga/src/store/actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","data","expirationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","AUTH_SUCCESS","token","userId","authFail","error","AUTH_FAIL","authLogout","AUTH_INITIATE_LOGOUT","authLogoutSucceed","AUTH_LOGOUT","authLogoutAsync","expiresTime","AUTH_LOGOUT_ASYNC","auth","username","password","isSignIn","AUTH_USER","authRedirectPath","path","AUTH_REDIRECT_PATH","authCheck","dispatch","getItem","dateNow"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (data) => {\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n    localStorage.setItem('token', data.idToken)\n    localStorage.setItem('expirationDate', expirationDate)\n    localStorage.setItem('userId', data.localId)\n\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: data.idToken,\n        userId: data.localId,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const authLogout = () => {\n    // localStorage.removeItem('token')\n    // localStorage.removeItem('expirationDate')\n    // localStorage.removeItem('userId')\n\n    return {\n        type: actionTypes.AUTH_INITIATE_LOGOUT,\n    }\n}\n\nexport const authLogoutSucceed = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const authLogoutAsync = (expiresTime) => {\n    return {\n        type: actionTypes.AUTH_LOGOUT_ASYNC,\n        expiresTime: expiresTime,\n    }\n    // return (dispatch) => {\n    // setTimeout(() => dispatch(authLogout()), expiresTime * 1000)\n    // }\n}\n\nexport const auth = (username, password, isSignIn) => {\n    return {\n        type: actionTypes.AUTH_USER,\n        username: username,\n        password: password,\n        isSignIn: isSignIn,\n    }\n}\n\nexport const authRedirectPath = (path) => {\n    return {\n        type: actionTypes.AUTH_REDIRECT_PATH,\n        path: path,\n    }\n}\n\nexport const authCheck = () => {\n    return (dispatch) => {\n        const token = localStorage.getItem('token')\n\n        if (token) {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            const dateNow = new Date()\n            if (expirationDate > dateNow) {\n                const expiresIn = (expirationDate.getTime() - dateNow.getTime()) / 1000\n                const data = {\n                    localId: localStorage.getItem('userId'),\n                    idToken: token,\n                    expiresIn: expiresIn,\n                }\n                dispatch(authSuccess(data))\n                dispatch(authLogoutAsync(expiresIn))\n            } else {\n                dispatch(authLogout())\n            }\n        } else {\n            dispatch(authLogout())\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}