{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nconst Orders = props => {\n  const {\n    token,\n    userId\n  } = props;\n  const dispatch = useDispatch();\n  const onFetchOrders = useCallback((token, userId) => dispatch(actions.fetchOrders(token, userId)), [dispatch]);\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, [token, userId, onFetchOrders]);\n  let orders = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n  const isAuth = !!props.token;\n\n  if (!props.loading && isAuth) {\n    orders = props.orders.map(order => {\n      return React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, orders);\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/Orders/Orders.js"],"names":["React","useEffect","useCallback","connect","useDispatch","Order","Spinner","axios","withErrorHandler","actions","Orders","props","token","userId","dispatch","onFetchOrders","fetchOrders","orders","isAuth","loading","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,aAAa,GAAGb,WAAW,CAC7B,CAACU,KAAD,EAAQC,MAAR,KAAmBC,QAAQ,CAACL,OAAO,CAACO,WAAR,CAAoBJ,KAApB,EAA2BC,MAA3B,CAAD,CADE,EAE7B,CAACC,QAAD,CAF6B,CAAjC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,CAAb;AACH,GAFQ,EAEN,CAACD,KAAD,EAAQC,MAAR,EAAgBE,aAAhB,CAFM,CAAT;AAIA,MAAIE,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;AACA,QAAMC,MAAM,GAAG,CAAC,CAACP,KAAK,CAACC,KAAvB;;AAEA,MAAI,CAACD,KAAK,CAACQ,OAAP,IAAkBD,MAAtB,EAA8B;AAC1BD,IAAAA,MAAM,GAAGN,KAAK,CAACM,MAAN,CAAaG,GAAb,CAAkBC,KAAD,IAAW;AACjC,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,QAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,QAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFQ,CAAT;AAGH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,MAAN,CAAP;AACH,CAvBD;;AAyBA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,MAAM,EAAES,KAAK,CAACL,KAAN,CAAYJ,MADjB;AAEHE,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF,OAFlB;AAGHP,IAAAA,KAAK,EAAEc,KAAK,CAACC,IAAN,CAAWf,KAHf;AAIHC,IAAAA,MAAM,EAAEa,KAAK,CAACC,IAAN,CAAWd;AAJhB,GAAP;AAMH,CAPD;;AAQA,MAAMe,kBAAkB,GAAId,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,aAAa,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmBC,QAAQ,CAACL,OAAO,CAACO,WAAR,CAAoBJ,KAApB,EAA2BC,MAA3B,CAAD;AADvC,GAAP;AAGH,CAJD;;AAKA,eAAeV,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA7D,CAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nconst Orders = (props) => {\n    const { token, userId } = props\n    const dispatch = useDispatch()\n\n    const onFetchOrders = useCallback(\n        (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n        [dispatch]\n    )\n\n    useEffect(() => {\n        onFetchOrders(token, userId)\n    }, [token, userId, onFetchOrders])\n\n    let orders = <Spinner />\n    const isAuth = !!props.token\n\n    if (!props.loading && isAuth) {\n        orders = props.orders.map((order) => {\n            return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n        })\n    }\n\n    return <div>{orders}</div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))\n"]},"metadata":{},"sourceType":"module"}