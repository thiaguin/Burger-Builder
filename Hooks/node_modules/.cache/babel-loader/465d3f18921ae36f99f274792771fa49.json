{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/components/Burger/BuildControls/BuildControls.js\";\nimport React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport './BuildControls.css';\nconst controls = [{\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Meat',\n  type: 'meat'\n}];\n\nconst BuildControls = props => {\n  const classes = 'BuildControls';\n  const buttonClasses = 'OrderButton';\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.price.toFixed(2))), controls.map((element, index) => React.createElement(BuildControl, {\n    key: index,\n    label: element.label,\n    added: () => {\n      props.addIngredients(element.type);\n    },\n    removed: () => {\n      props.removeIngredients(element.type);\n    },\n    disabled: props.disabled[element.type],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: !props.isAuth && !props.purchasable,\n    className: buttonClasses,\n    onClick: props.ordered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.isAuth ? 'Order' : 'Please, login to continue.'));\n};\n\nexport default BuildControls;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/components/Burger/BuildControls/BuildControls.js"],"names":["React","BuildControl","controls","label","type","BuildControls","props","classes","buttonClasses","price","toFixed","map","element","index","addIngredients","removeIngredients","disabled","isAuth","purchasable","ordered"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,qBAAP;AAEA,MAAMC,QAAQ,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADa,EAEb;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFa,EAGb;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHa,EAIb;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJa,CAAjB;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAG,eAAhB;AACA,QAAMC,aAAa,GAAG,aAAtB;AAEA,SACI;AAAK,IAAA,SAAS,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAT,CADX,CADJ,EAIKR,QAAQ,CAACS,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACV,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,KAAK,EAAED,OAAO,CAACT,KAFnB;AAGI,IAAA,KAAK,EAAE,MAAM;AACTG,MAAAA,KAAK,CAACQ,cAAN,CAAqBF,OAAO,CAACR,IAA7B;AACH,KALL;AAMI,IAAA,OAAO,EAAE,MAAM;AACXE,MAAAA,KAAK,CAACS,iBAAN,CAAwBH,OAAO,CAACR,IAAhC;AACH,KARL;AASI,IAAA,QAAQ,EAAEE,KAAK,CAACU,QAAN,CAAeJ,OAAO,CAACR,IAAvB,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJL,EAiBI;AACI,IAAA,QAAQ,EAAE,CAACE,KAAK,CAACW,MAAP,IAAiB,CAACX,KAAK,CAACY,WADtC;AAEI,IAAA,SAAS,EAAEV,aAFf;AAGI,IAAA,OAAO,EAAEF,KAAK,CAACa,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKb,KAAK,CAACW,MAAN,GAAe,OAAf,GAAyB,4BAL9B,CAjBJ,CADJ;AA2BH,CA/BD;;AAiCA,eAAeZ,aAAf","sourcesContent":["import React from 'react'\nimport BuildControl from './BuildControl/BuildControl'\nimport './BuildControls.css'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\nconst BuildControls = (props) => {\n    const classes = 'BuildControls'\n    const buttonClasses = 'OrderButton'\n\n    return (\n        <div className={classes}>\n            <p>\n                Price: <strong>{props.price.toFixed(2)}</strong>\n            </p>\n            {controls.map((element, index) => (\n                <BuildControl\n                    key={index}\n                    label={element.label}\n                    added={() => {\n                        props.addIngredients(element.type)\n                    }}\n                    removed={() => {\n                        props.removeIngredients(element.type)\n                    }}\n                    disabled={props.disabled[element.type]}\n                />\n            ))}\n            <button\n                disabled={!props.isAuth && !props.purchasable}\n                className={buttonClasses}\n                onClick={props.ordered}\n            >\n                {props.isAuth ? 'Order' : 'Please, login to continue.'}\n            </button>\n        </div>\n    )\n}\n\nexport default BuildControls\n"]},"metadata":{},"sourceType":"module"}