{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nconst BurgerBuilder = props => {\n  const [purchasing, setPurchasing] = useState(false);\n  const {\n    onInitIngredients\n  } = props;\n  useEffect(() => {\n    onInitIngredients();\n  }, [onInitIngredients]);\n\n  updatePurchasable = ingredients => {\n    const sum = Object.values(ingredients).reduce((sum, el) => sum += el, 0);\n    return sum > 0;\n  };\n\n  purchaseHandler = () => {\n    if (this.props.isAuthenticated) {\n      this.setState({\n        purchasing: true\n      });\n    } else {\n      this.props.onAuthRedirect('/checkout');\n      this.props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  const purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push('/checkout');\n  };\n\n  const disableInfo = {};\n  let orderSummary = null;\n  let burger = this.props.error ? React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n\n  if (this.state.loading) {\n    orderSummary = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n  if (this.props.ingredients) {\n    for (const ingredient of Object.keys(this.props.ingredients)) {\n      disableInfo[ingredient] = this.props.ingredients[ingredient] <= 0;\n    }\n\n    burger = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      addIngredients: this.props.onIngredientsAdded,\n      removeIngredients: this.props.onIngredientsRemoved,\n      disabled: disableInfo,\n      price: this.props.price,\n      ordered: this.purchaseHandler,\n      isAuth: this.props.isAuthenticated,\n      purchasable: this.updatePurchasable(this.props.ingredients),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n    orderSummary = React.createElement(OrderSummary, {\n      price: this.props.price,\n      cancelingPurchase: this.purchaseCancelHandler,\n      continuingPurchase: this.purchaseContinueHandler,\n      ingredients: this.props.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: this.state.purchasing,\n    closing: this.purchaseCancelHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, orderSummary), burger);\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.price,\n    purchasable: state.burgerBuilder.purchasable,\n    error: state.burgerBuilder.error,\n    isAuthenticated: !!state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientsAdded: name => dispatch(actions.addIngredient(name)),\n    onIngredientsRemoved: name => dispatch(actions.removeIngredient(name)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onAuthRedirect: path => dispatch(actions.authRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/Hooks/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useEffect","connect","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","axios","withErrorHandler","actions","BurgerBuilder","props","purchasing","setPurchasing","onInitIngredients","updatePurchasable","ingredients","sum","Object","values","reduce","el","purchaseHandler","isAuthenticated","setState","onAuthRedirect","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","disableInfo","orderSummary","burger","error","textAlign","state","loading","ingredient","keys","onIngredientsAdded","onIngredientsRemoved","price","mapStateToProps","burgerBuilder","purchasable","auth","token","mapDispatchToProps","dispatch","name","addIngredient","removeIngredient","initIngredients","purchaseInit","path","authRedirectPath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nconst BurgerBuilder = (props) => {\n    const [purchasing, setPurchasing] = useState(false)\n\n    const { onInitIngredients } = props\n    useEffect(() => {\n        onInitIngredients()\n    }, [onInitIngredients])\n\n    updatePurchasable = (ingredients) => {\n        const sum = Object.values(ingredients).reduce((sum, el) => (sum += el), 0)\n        return sum > 0\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true })\n        } else {\n            this.props.onAuthRedirect('/checkout')\n            this.props.history.push('/auth')\n        }\n    }\n\n    const purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    const purchaseContinueHandler = () => {\n        this.props.onInitPurchase()\n        this.props.history.push('/checkout')\n    }\n\n    const disableInfo = {}\n    let orderSummary = null\n    let burger = this.props.error ? (\n        <p style={{ textAlign: 'center' }}>Ingredients can't be loaded!</p>\n    ) : (\n        <Spinner />\n    )\n\n    if (this.state.loading) {\n        orderSummary = <Spinner />\n    }\n\n    if (this.props.ingredients) {\n        for (const ingredient of Object.keys(this.props.ingredients)) {\n            disableInfo[ingredient] = this.props.ingredients[ingredient] <= 0\n        }\n        burger = (\n            <Aux>\n                <Burger ingredients={this.props.ingredients} />\n                <BuildControls\n                    addIngredients={this.props.onIngredientsAdded}\n                    removeIngredients={this.props.onIngredientsRemoved}\n                    disabled={disableInfo}\n                    price={this.props.price}\n                    ordered={this.purchaseHandler}\n                    isAuth={this.props.isAuthenticated}\n                    purchasable={this.updatePurchasable(this.props.ingredients)}\n                />\n            </Aux>\n        )\n\n        orderSummary = (\n            <OrderSummary\n                price={this.props.price}\n                cancelingPurchase={this.purchaseCancelHandler}\n                continuingPurchase={this.purchaseContinueHandler}\n                ingredients={this.props.ingredients}\n            />\n        )\n    }\n\n    return (\n        <Aux>\n            <Modal show={this.state.purchasing} closing={this.purchaseCancelHandler}>\n                {orderSummary}\n            </Modal>\n            {burger}\n        </Aux>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.price,\n        purchasable: state.burgerBuilder.purchasable,\n        error: state.burgerBuilder.error,\n        isAuthenticated: !!state.auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientsAdded: (name) => dispatch(actions.addIngredient(name)),\n        onIngredientsRemoved: (name) => dispatch(actions.removeIngredient(name)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onAuthRedirect: (path) => dispatch(actions.authRedirectPath(path)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))\n"]},"metadata":{},"sourceType":"module"}