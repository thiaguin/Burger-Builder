{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport * as utility from '../utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = state => {\n  return { ...state,\n    purchased: false\n  };\n};\n\nconst purchaseBurgerStart = state => {\n  return { ...state,\n    loading: true\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n    case actionTypes.PURCHASE_BURGER_START:\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return { ...state,\n        orders: [...state.orders, { ...action.orderData,\n          id: action.orderId\n        }],\n        loading: false,\n        purchased: true\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    case actionTypes.FETCH_ORDERS_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          orders: utility.getOrders(action.fetchedOrders)\n        };\n      }\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","utility","initialState","orders","loading","purchased","purchaseInit","state","purchaseBurgerStart","reducer","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","orderData","id","orderId","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","getOrders","fetchedOrders","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,SAAO,EACH,GAAGA,KADA;AAEHF,IAAAA,SAAS,EAAE;AAFR,GAAP;AAIH,CALD;;AAOA,MAAMG,mBAAmB,GAAID,KAAD,IAAW;AACnC,SAAO,EACH,GAAGA,KADA;AAEHH,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMK,OAAO,GAAG,CAACF,KAAK,GAAGL,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,aAAjB;AACA,SAAKZ,WAAW,CAACa,qBAAjB;AACA,SAAKb,WAAW,CAACc,uBAAjB;AACI,aAAO,EACH,GAAGP,KADA;AAEHJ,QAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkB,EAAE,GAAGO,MAAM,CAACK,SAAZ;AAAuBC,UAAAA,EAAE,EAAEN,MAAM,CAACO;AAAlC,SAAlB,CAFL;AAGHb,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKL,WAAW,CAACkB,oBAAjB;AAAuC;AACnC,eAAO,EACH,GAAGX,KADA;AAEHH,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD,SAAKJ,WAAW,CAACmB,kBAAjB;AAAqC;AACjC,eAAO,EACH,GAAGZ,KADA;AAEHH,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD,SAAKJ,WAAW,CAACoB,oBAAjB;AAAuC;AACnC,eAAO,EACH,GAAGb,KADA;AAEHH,UAAAA,OAAO,EAAE,KAFN;AAGHD,UAAAA,MAAM,EAAEF,OAAO,CAACoB,SAAR,CAAkBX,MAAM,CAACY,aAAzB;AAHL,SAAP;AAKH;;AACD,SAAKtB,WAAW,CAACuB,iBAAjB;AAAoC;AAChC,eAAO,EACH,GAAGhB,KADA;AAEHH,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD;AACI,aAAO,EACH,GAAGG;AADA,OAAP;AApCR;AAwCH,CAzCD;;AA2CA,eAAeE,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport * as utility from '../utility'\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n}\n\nconst purchaseInit = (state) => {\n    return {\n        ...state,\n        purchased: false,\n    }\n}\n\nconst purchaseBurgerStart = (state) => {\n    return {\n        ...state,\n        loading: true,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n        case actionTypes.PURCHASE_BURGER_START:\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            return {\n                ...state,\n                orders: [...state.orders, { ...action.orderData, id: action.orderId }],\n                loading: false,\n                purchased: true,\n            }\n        case actionTypes.PURCHASE_BURGER_FAIL: {\n            return {\n                ...state,\n                loading: false,\n            }\n        }\n        case actionTypes.FETCH_ORDERS_START: {\n            return {\n                ...state,\n                loading: true,\n            }\n        }\n        case actionTypes.FETCH_ORDERS_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                orders: utility.getOrders(action.fetchedOrders),\n            }\n        }\n        case actionTypes.FETCH_ORDERS_FAIL: {\n            return {\n                ...state,\n                loading: false,\n            }\n        }\n        default:\n            return {\n                ...state,\n            }\n    }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}