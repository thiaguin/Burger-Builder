{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchOrders } from '../../store/actions/index';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      const orders = [];\n\n      for (const key in res.data) {\n        orders.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      this.setState({\n        loading: false,\n        orders: orders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const orders = this.state.orders.map(order => {\n      return React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(fetchOrders())\n  };\n};\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","fetchOrders","Order","axios","withErrorHandler","Orders","state","orders","loading","componentDidMount","get","then","res","key","data","push","id","setState","catch","err","render","map","order","ingredients","price","mapDispatchToProps","dispatch","onFetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CACAO,GADL,CACS,cADT,EAEKC,IAFL,CAEWC,GAAD,IAAS;AACX,YAAML,MAAM,GAAG,EAAf;;AACA,WAAK,MAAMM,GAAX,IAAkBD,GAAG,CAACE,IAAtB,EAA4B;AACxBP,QAAAA,MAAM,CAACQ,IAAP,CAAY,EACR,GAAGH,GAAG,CAACE,IAAJ,CAASD,GAAT,CADK;AAERG,UAAAA,EAAE,EAAEH;AAFI,SAAZ;AAIH;;AACD,WAAKI,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE,KAAX;AAAkBD,QAAAA,MAAM,EAAEA;AAA1B,OAAd;AACH,KAXL,EAYKW,KAZL,CAYYC,GAAD,IAAS;AACZ,WAAKF,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAdL;AAeH;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAMb,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAuBC,KAAD,IAAW;AAC5C,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACN,EAAlB;AAAsB,QAAA,WAAW,EAAEM,KAAK,CAACC,WAAzC;AAAsD,QAAA,KAAK,EAAED,KAAK,CAACE,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFc,CAAf;AAIA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMjB,MAAN,CAAP;AACH;;AA9B0B;;AAiC/B,MAAMkB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACzB,WAAW,EAAZ;AAD1B,GAAP;AAGH,CAJD;;AAKA,eAAeG,gBAAgB,CAACC,MAAD,EAASF,KAAT,CAA/B","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchOrders } from '../../store/actions/index'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    componentDidMount() {\n        axios\n            .get('/orders.json')\n            .then((res) => {\n                const orders = []\n                for (const key in res.data) {\n                    orders.push({\n                        ...res.data[key],\n                        id: key,\n                    })\n                }\n                this.setState({ loading: false, orders: orders })\n            })\n            .catch((err) => {\n                this.setState({ loading: false })\n            })\n    }\n\n    render() {\n        const orders = this.state.orders.map((order) => {\n            return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n        })\n\n        return <div>{orders}</div>\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: () => dispatch(fetchOrders()),\n    }\n}\nexport default withErrorHandler(Orders, axios)\n"]},"metadata":{},"sourceType":"module"}