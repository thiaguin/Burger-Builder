{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        name: {\n          elementType: 'input',\n          config: {\n            type: 'text',\n            placeholder: 'Username'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          config: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n  }\n\n  render() {\n    const inputs = [];\n\n    for (const key in this.state.controls) {\n      const input = React.createElement(Input, {\n        key: key,\n        elementType: this.state.controls[key].elementType,\n        config: this.state.controls[key].config,\n        value: this.state.controls[key].value,\n        invalid: !this.state.controls[key].valid,\n        shouldValidate: this.state.controls[key].validation,\n        touched: this.state.controls[key].touched,\n        changed: event => this.inputChangeHandler(event, key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n      inputs.push(input);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, inputs.length > 0 ? inputs : null, React.createElement(Button, {\n      btnType: \"Success\",\n      disabled: !this.state.validFormData,\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","Auth","state","controls","name","elementType","config","type","placeholder","value","validation","required","valid","touched","password","render","inputs","key","input","event","inputChangeHandler","push","length","validFormData","orderHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,IAAI,EAAE;AACFC,UAAAA,WAAW,EAAE,OADX;AAEFC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE,MADF;AAEJC,YAAAA,WAAW,EAAE;AAFT,WAFN;AAMFC,UAAAA,KAAK,EAAE,EANL;AAOFC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPV;AAUFC,UAAAA,KAAK,EAAE,KAVL;AAWFC,UAAAA,OAAO,EAAE;AAXP,SADA;AAcNC,QAAAA,QAAQ,EAAE;AACNT,UAAAA,WAAW,EAAE,OADP;AAENC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE,UADF;AAEJC,YAAAA,WAAW,EAAE;AAFT,WAFF;AAMNC,UAAAA,KAAK,EAAE,EAND;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPN;AAUNC,UAAAA,KAAK,EAAE,KAVD;AAWNC,UAAAA,OAAO,EAAE;AAXH;AAdJ;AADN,KADiB;AAAA;;AA+BzBE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,EAAf;;AAEA,SAAK,MAAMC,GAAX,IAAkB,KAAKf,KAAL,CAAWC,QAA7B,EAAuC;AACnC,YAAMe,KAAK,GACP,oBAAC,KAAD;AACI,QAAA,GAAG,EAAED,GADT;AAEI,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBZ,WAF1C;AAGI,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBX,MAHrC;AAII,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBR,KAJpC;AAKI,QAAA,OAAO,EAAE,CAAC,KAAKP,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBL,KALvC;AAMI,QAAA,cAAc,EAAE,KAAKV,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBP,UAN7C;AAOI,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBc,GAApB,EAAyBJ,OAPtC;AAQI,QAAA,OAAO,EAAGM,KAAD,IAAW,KAAKC,kBAAL,CAAwBD,KAAxB,EAA+BF,GAA/B,CARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAYAD,MAAAA,MAAM,CAACK,IAAP,CAAYH,KAAZ;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,MAAM,CAACM,MAAP,GAAgB,CAAhB,GAAoBN,MAApB,GAA6B,IADlC,EAEI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,QAAQ,EAAE,CAAC,KAAKd,KAAL,CAAWqB,aAF1B;AAGI,MAAA,OAAO,EAAE,KAAKC,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ;AAcH;;AAhEwB;;AAmE7B,eAAevB,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport Input from '../../components/UI/Input/Input'\nimport Button from '../../components/UI/Button/Button'\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            name: {\n                elementType: 'input',\n                config: {\n                    type: 'text',\n                    placeholder: 'Username',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                config: {\n                    type: 'password',\n                    placeholder: 'Password',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n    }\n    render() {\n        const inputs = []\n\n        for (const key in this.state.controls) {\n            const input = (\n                <Input\n                    key={key}\n                    elementType={this.state.controls[key].elementType}\n                    config={this.state.controls[key].config}\n                    value={this.state.controls[key].value}\n                    invalid={!this.state.controls[key].valid}\n                    shouldValidate={this.state.controls[key].validation}\n                    touched={this.state.controls[key].touched}\n                    changed={(event) => this.inputChangeHandler(event, key)}\n                />\n            )\n            inputs.push(input)\n        }\n\n        return (\n            <div>\n                <form>\n                    {inputs.length > 0 ? inputs : null}\n                    <Button\n                        btnType='Success'\n                        disabled={!this.state.validFormData}\n                        clicked={this.orderHandler}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}