{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  ingredients: null,\n  price: 4,\n  error: false\n};\nconst INGREDIENTS_PRICE = {\n  salad: 1,\n  cheese: 1,\n  bacon: 1.5,\n  meat: 2\n};\n\nconst addIngredient = (state, action) => {\n  return { ...state,\n    ingredients: { ...state.ingredients,\n      [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n    },\n    price: state.price + INGREDIENTS_PRICE[action.ingredientName]\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n    case actionTypes.REMOVE_INGREDIENT:\n      const qntIngredient = state.ingredients[action.ingredientName];\n      const priceUpdated = state.price - INGREDIENTS_PRICE[action.ingredientName];\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: qntIngredient > 0 ? qntIngredient - 1 : 0\n        },\n        price: qntIngredient > 0 ? priceUpdated : state.price\n      };\n\n    case actionTypes.INIT_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredientsFetched.salad,\n          cheese: action.ingredientsFetched.cheese,\n          bacon: action.ingredientsFetched.bacon,\n          meat: action.ingredientsFetched.meat\n        },\n        price: 4\n      };\n\n    case actionTypes.INIT_INGREDIENTS_FAIL:\n      return { ...state,\n        error: true,\n        ingredients: null\n      };\n\n    default:\n      return { ...state,\n        ingredients: { ...state.ingredients\n        }\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","price","error","INGREDIENTS_PRICE","salad","cheese","bacon","meat","addIngredient","state","action","ingredientName","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","qntIngredient","priceUpdated","INIT_INGREDIENTS","ingredientsFetched","INIT_INGREDIENTS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,CADe;AAEtBC,EAAAA,MAAM,EAAE,CAFc;AAGtBC,EAAAA,KAAK,EAAE,GAHe;AAItBC,EAAAA,IAAI,EAAE;AAJgB,CAA1B;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAO,EACH,GAAGD,KADA;AAEHT,IAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,OAACU,MAAM,CAACC,cAAR,GAAyBF,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACC,cAAzB,IAA2C;AAF3D,KAFV;AAMHV,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,GAAcE,iBAAiB,CAACO,MAAM,CAACC,cAAR;AANnC,GAAP;AAQH,CATD;;AAWA,MAAMC,OAAO,GAAG,CAACH,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKf,WAAW,CAACgB,cAAjB;AACA,SAAKhB,WAAW,CAACiB,iBAAjB;AACI,YAAMC,aAAa,GAAGP,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACC,cAAzB,CAAtB;AACA,YAAMM,YAAY,GAAGR,KAAK,CAACR,KAAN,GAAcE,iBAAiB,CAACO,MAAM,CAACC,cAAR,CAApD;AACA,aAAO,EACH,GAAGF,KADA;AAEHT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,WAACU,MAAM,CAACC,cAAR,GAAyBK,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,CAApC,GAAwC;AAFxD,SAFV;AAMHf,QAAAA,KAAK,EAAEe,aAAa,GAAG,CAAhB,GAAoBC,YAApB,GAAmCR,KAAK,CAACR;AAN7C,OAAP;;AAQJ,SAAKH,WAAW,CAACoB,gBAAjB;AACI,aAAO,EACH,GAAGT,KADA;AAEHT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACS,kBAAP,CAA0Bf,KADxB;AAETC,UAAAA,MAAM,EAAEK,MAAM,CAACS,kBAAP,CAA0Bd,MAFzB;AAGTC,UAAAA,KAAK,EAAEI,MAAM,CAACS,kBAAP,CAA0Bb,KAHxB;AAITC,UAAAA,IAAI,EAAEG,MAAM,CAACS,kBAAP,CAA0BZ;AAJvB,SAFV;AAQHN,QAAAA,KAAK,EAAE;AARJ,OAAP;;AAUJ,SAAKH,WAAW,CAACsB,qBAAjB;AACI,aAAO,EACH,GAAGX,KADA;AAEHP,QAAAA,KAAK,EAAE,IAFJ;AAGHF,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ;AACI,aAAO,EACH,GAAGS,KADA;AAEHT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT;AADA;AAFV,OAAP;AA/BR;AAsCH,CAvCD;;AAyCA,eAAeY,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    ingredients: null,\n    price: 4,\n    error: false,\n}\n\nconst INGREDIENTS_PRICE = {\n    salad: 1,\n    cheese: 1,\n    bacon: 1.5,\n    meat: 2,\n}\n\nconst addIngredient = (state, action) => {\n    return {\n        ...state,\n        ingredients: {\n            ...state.ingredients,\n            [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        price: state.price + INGREDIENTS_PRICE[action.ingredientName],\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n        case actionTypes.REMOVE_INGREDIENT:\n            const qntIngredient = state.ingredients[action.ingredientName]\n            const priceUpdated = state.price - INGREDIENTS_PRICE[action.ingredientName]\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: qntIngredient > 0 ? qntIngredient - 1 : 0,\n                },\n                price: qntIngredient > 0 ? priceUpdated : state.price,\n            }\n        case actionTypes.INIT_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: {\n                    salad: action.ingredientsFetched.salad,\n                    cheese: action.ingredientsFetched.cheese,\n                    bacon: action.ingredientsFetched.bacon,\n                    meat: action.ingredientsFetched.meat,\n                },\n                price: 4,\n            }\n        case actionTypes.INIT_INGREDIENTS_FAIL:\n            return {\n                ...state,\n                error: true,\n                ingredients: null,\n            }\n        default:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                },\n            }\n    }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}