{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  componenWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n    const isAuth = !!this.props.token;\n\n    if (!this.props.loading && isAuth) {\n      orders = this.props.orders.map(order => {\n        return React.createElement(Order, {\n          key: order.id,\n          ingredients: order.ingredients,\n          price: order.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","Spinner","axios","withErrorHandler","actions","Orders","state","orders","loading","componentDidMount","props","onFetchOrders","token","userId","componenWillUnmount","_isMounted","render","isAuth","map","order","id","ingredients","price","mapStateToProps","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BQ,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,EAA2C,KAAKF,KAAL,CAAWG,MAAtD;AACH;;AAEDC,EAAAA,mBAAmB,GAAG;AAClB,SAAKC,UAAL,GAAkB,KAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIT,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,UAAMU,MAAM,GAAG,CAAC,CAAC,KAAKP,KAAL,CAAWE,KAA5B;;AAEA,QAAI,CAAC,KAAKF,KAAL,CAAWF,OAAZ,IAAuBS,MAA3B,EAAmC;AAC/BV,MAAAA,MAAM,GAAG,KAAKG,KAAL,CAAWH,MAAX,CAAkBW,GAAlB,CAAuBC,KAAD,IAAW;AACtC,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,UAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFQ,CAAT;AAGH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMf,MAAN,CAAP;AACH;;AAzB0B;;AA4B/B,MAAMgB,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACa,KAAN,CAAYZ,MADjB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACa,KAAN,CAAYX,OAFlB;AAGHI,IAAAA,KAAK,EAAEN,KAAK,CAACkB,IAAN,CAAWZ,KAHf;AAIHC,IAAAA,MAAM,EAAEP,KAAK,CAACkB,IAAN,CAAWX;AAJhB,GAAP;AAMH,CAPD;;AAQA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBa,QAAQ,CAACtB,OAAO,CAACuB,WAAR,CAAoBf,KAApB,EAA2BC,MAA3B,CAAD;AADvC,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId)\n    }\n\n    componenWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n        let orders = <Spinner />\n        const isAuth = !!this.props.token\n\n        if (!this.props.loading && isAuth) {\n            orders = this.props.orders.map((order) => {\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n            })\n        }\n\n        return <div>{orders}</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))\n"]},"metadata":{},"sourceType":"module"}