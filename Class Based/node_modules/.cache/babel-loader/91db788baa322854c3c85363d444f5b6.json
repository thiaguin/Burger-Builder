{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      const orders = [];\n\n      for (const key in res.data) {\n        orders.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      this.setState({\n        loading: false,\n        orders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const orders = this.state.orders.map(order => {\n      return React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Order, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Order, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Orders","state","orders","loading","componentDidMount","get","then","res","key","data","push","id","setState","catch","err","render","map","order","ingredients","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAI;AACjBN,IAAAA,KAAK,CAACO,GAAN,CAAU,cAAV,EACKC,IADL,CACWC,GAAD,IAAS;AACX,YAAML,MAAM,GAAG,EAAf;;AACA,WAAK,MAAMM,GAAX,IAAkBD,GAAG,CAACE,IAAtB,EAA4B;AACxBP,QAAAA,MAAM,CAACQ,IAAP,CAAY,EACR,GAAGH,GAAG,CAACE,IAAJ,CAASD,GAAT,CADK;AAERG,UAAAA,EAAE,EAAEH;AAFI,SAAZ;AAIH;;AACD,WAAKI,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE,KAAV;AAAiBD,QAAAA;AAAjB,OAAd;AACH,KAVL,EAWKW,KAXL,CAWYC,GAAD,IAAS;AACZ,WAAKF,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAbL;AAcH;;AAEDY,EAAAA,MAAM,GAAI;AACN,UAAMb,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAsBC,KAAK,IAAI;AAC1C,aACI,oBAAC,KAAD;AACI,QAAA,GAAG,EAAEA,KAAK,CAACN,EADf;AAEI,QAAA,WAAW,EAAEM,KAAK,CAACC,WAFvB;AAGI,QAAA,KAAK,EAAED,KAAK,CAACE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH,KAPc,CAAf;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAtC0B;;AAyC/B,eAAepB,gBAAgB,CAACC,MAAD,EAASF,KAAT,CAA/B","sourcesContent":["import React , {Component} from 'react'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount () {\n        axios.get('/orders.json')\n            .then((res) => {\n                const orders = []\n                for (const key in res.data) {\n                    orders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                this.setState({loading: false, orders})\n            })\n            .catch((err) => {\n                this.setState({loading: false})\n            })\n    }\n\n    render () {\n        const orders = this.state.orders.map(order => {\n            return (\n                <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price}/>\n            )\n        })\n        return (\n            <div>\n                <Order/>\n                <Order/>\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios)"]},"metadata":{},"sourceType":"module"}