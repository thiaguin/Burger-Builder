{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport actions from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // ingredients: null,\n      // price: 4,\n      // purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchasable = ingredients => {\n      const sum = Object.values(ingredients).reduce((sum, el) => sum += el, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {// axios.get('ingredients.json')\n    //     .then((response) => {\n    //         this.setState({ingredients: response.data})\n    //     })\n    //     .catch((error) => {\n    //         this.setState({error: true})\n    //     })\n  }\n\n  render() {\n    const disableInfo = {};\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.ingredients) {\n      for (const ingredient of Object.keys(this.props.ingredients)) {\n        disableInfo[ingredient] = this.props.ingredients[ingredient] <= 0;\n      }\n\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        addIngredients: this.props.onIngredientsAdded,\n        removeIngredients: this.props.onIngredientsRemoved,\n        disabled: disableInfo,\n        price: this.props.price,\n        ordered: this.purchaseHandler,\n        purchasable: this.updatePurchasable(this.props.ingredients),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        price: this.props.price,\n        cancelingPurchase: this.purchaseCancelHandler,\n        continuingPurchase: this.purchaseContinueHandler,\n        ingredients: this.props.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      closing: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    price: state.price,\n    purchasable: state.purchasable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientsAdded: name => dispatch(actions.addIngredient(name)),\n    onIngredientsRemoved: name => dispatch(actions.removeIngredient(name))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","axios","withErrorHandler","actions","BurgerBuilder","state","purchasing","loading","error","updatePurchasable","ingredients","sum","Object","values","reduce","el","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","render","disableInfo","orderSummary","burger","textAlign","ingredient","keys","onIngredientsAdded","onIngredientsRemoved","price","mapStateToProps","purchasable","mapDispatchToProps","dispatch","name","addIngredient","removeIngredient"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\nimport actions from '../../store/actions'\n\nclass BurgerBuilder extends Component {\n    state = {\n        // ingredients: null,\n        // price: 4,\n        // purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false,\n    }\n\n    componentDidMount() {\n        // axios.get('ingredients.json')\n        //     .then((response) => {\n        //         this.setState({ingredients: response.data})\n        //     })\n        //     .catch((error) => {\n        //         this.setState({error: true})\n        //     })\n    }\n\n    updatePurchasable = (ingredients) => {\n        const sum = Object.values(ingredients).reduce((sum, el) => (sum += el), 0)\n        return sum > 0\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout')\n    }\n\n    render() {\n        const disableInfo = {}\n        let orderSummary = null\n        let burger = this.state.error ? (\n            <p style={{ textAlign: 'center' }}>Ingredients can't be loaded!</p>\n        ) : (\n            <Spinner />\n        )\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        if (this.props.ingredients) {\n            for (const ingredient of Object.keys(this.props.ingredients)) {\n                disableInfo[ingredient] = this.props.ingredients[ingredient] <= 0\n            }\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ingredients} />\n                    <BuildControls\n                        addIngredients={this.props.onIngredientsAdded}\n                        removeIngredients={this.props.onIngredientsRemoved}\n                        disabled={disableInfo}\n                        price={this.props.price}\n                        ordered={this.purchaseHandler}\n                        purchasable={this.updatePurchasable(this.props.ingredients)}\n                    />\n                </Aux>\n            )\n\n            orderSummary = (\n                <OrderSummary\n                    price={this.props.price}\n                    cancelingPurchase={this.purchaseCancelHandler}\n                    continuingPurchase={this.purchaseContinueHandler}\n                    ingredients={this.props.ingredients}\n                />\n            )\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} closing={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.ingredients,\n        price: state.price,\n        purchasable: state.purchasable,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientsAdded: (name) => dispatch(actions.addIngredient(name)),\n        onIngredientsRemoved: (name) => dispatch(actions.removeIngredient(name)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))\n"]},"metadata":{},"sourceType":"module"}