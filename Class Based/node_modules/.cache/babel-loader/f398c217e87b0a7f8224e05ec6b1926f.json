{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { stat } from 'fs-extra';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        cheese: 1,\n        bacon: 1,\n        salad: 1,\n        meat: 1\n      },\n      price: 0\n    };\n\n    this.cancelHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.continueHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  componentWillMount() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n\n    for (const param of query.entries()) {\n      if (param[0] === 'price') {\n        this.setState({\n          price: param[1]\n        });\n      } else {\n        ingredients[param[0]] = param[1];\n      }\n    }\n\n    this.setState({\n      ingredients\n    });\n  }\n\n  render() {\n    const contactData = props => React.createElement(ContactData, Object.assign({\n      ingredients: this.state.ingredients,\n      price: this.state.price\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CheckoutSummary, {\n      ingredients: this.state.ingredients,\n      cancelling: this.cancelHandler,\n      continuing: this.continueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: this.props.match.url + '/contact-data',\n      render: props => contactData(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    price: state.price\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","connect","CheckoutSummary","ContactData","stat","Checkout","state","ingredients","cheese","bacon","salad","meat","price","cancelHandler","props","history","goBack","continueHandler","replace","componentWillMount","query","URLSearchParams","location","search","param","entries","setState","render","contactData","match","url","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AACJC,MAAAA,WAAW,EAAE;AACTC,QAAAA,MAAM,EAAE,CADC;AAETC,QAAAA,KAAK,EAAE,CAFE;AAGTC,QAAAA,KAAK,EAAE,CAHE;AAITC,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJC,MAAAA,KAAK,EAAE;AAPH,KADqB;;AAAA,SAwB7BC,aAxB6B,GAwBb,MAAM;AAClB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KA1B4B;;AAAA,SA4B7BC,eA5B6B,GA4BX,MAAM;AACpB,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KA9B4B;AAAA;;AAW7BC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMhB,WAAW,GAAG,EAApB;;AACA,SAAK,MAAMiB,KAAX,IAAoBJ,KAAK,CAACK,OAAN,EAApB,EAAqC;AACjC,UAAID,KAAK,CAAC,CAAD,CAAL,KAAa,OAAjB,EAA0B;AACtB,aAAKE,QAAL,CAAc;AAAEd,UAAAA,KAAK,EAAEY,KAAK,CAAC,CAAD;AAAd,SAAd;AACH,OAFD,MAEO;AACHjB,QAAAA,WAAW,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAX,GAAwBA,KAAK,CAAC,CAAD,CAA7B;AACH;AACJ;;AACD,SAAKE,QAAL,CAAc;AAAEnB,MAAAA;AAAF,KAAd;AACH;;AAUDoB,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAId,KAAD,IAChB,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAArC;AAAkD,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM;AAApE,OAA+EE,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD5B;AAEI,MAAA,UAAU,EAAE,KAAKM,aAFrB;AAGI,MAAA,UAAU,EAAE,KAAKI,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWe,KAAX,CAAiBC,GAAjB,GAAuB,eADjC;AAEI,MAAA,MAAM,EAAGhB,KAAD,IAAWc,WAAW,CAACd,KAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AAlD4B;;AAqDjC,MAAMiB,eAAe,GAAIzB,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHK,IAAAA,KAAK,EAAEN,KAAK,CAACM;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAAC8B,eAAD,CAAP,CAAyB1B,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\nimport { stat } from 'fs-extra'\n\nclass Checkout extends Component {\n    state = {\n        ingredients: {\n            cheese: 1,\n            bacon: 1,\n            salad: 1,\n            meat: 1,\n        },\n        price: 0,\n    }\n\n    componentWillMount() {\n        const query = new URLSearchParams(this.props.location.search)\n        const ingredients = {}\n        for (const param of query.entries()) {\n            if (param[0] === 'price') {\n                this.setState({ price: param[1] })\n            } else {\n                ingredients[param[0]] = param[1]\n            }\n        }\n        this.setState({ ingredients })\n    }\n\n    cancelHandler = () => {\n        this.props.history.goBack()\n    }\n\n    continueHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render() {\n        const contactData = (props) => (\n            <ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />\n        )\n\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.state.ingredients}\n                    cancelling={this.cancelHandler}\n                    continuing={this.continueHandler}\n                />\n                <Route\n                    path={this.props.match.url + '/contact-data'}\n                    render={(props) => contactData(props)}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ingredients: state.ingredients,\n        price: state.price,\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout)\n"]},"metadata":{},"sourceType":"module"}