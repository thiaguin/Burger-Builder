{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nconst INGREDIENTS_PRICE = {\n  salad: 1,\n  cheese: 1,\n  bacon: 1.5,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      price: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchasable = ingredients => {\n      const sum = Object.values(ingredients).reduce((sum, el) => sum += el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] += 1;\n      const updatedPrice = this.state.price + INGREDIENTS_PRICE[type];\n      this.setState({\n        price: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredients = { ...this.state.ingredients\n      };\n\n      if (updatedIngredients[type] > 0) {\n        updatedIngredients[type] -= 1;\n        const updatedPrice = this.state.price - INGREDIENTS_PRICE[type];\n        this.setState({\n          price: updatedPrice,\n          ingredients: updatedIngredients\n        });\n      }\n\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const order = {\n        ingredient: this.state.ingredients,\n        price: this.state.price,\n        customer: {\n          name: 'Thiaguin',\n          delivery: 'fastest',\n          address: {\n            number: 371,\n            cep: '58417-598',\n            country: 'Brazil'\n          }\n        }\n      };\n      this.setState({\n        loading: true\n      });\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-builder-35ab4.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    const disableInfo = {};\n\n    for (const ingredient of Object.keys(this.state.ingredients)) {\n      disableInfo[ingredient] = this.state.ingredients[ingredient] <= 0;\n    }\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    }\n\n    let burger = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        addIngredients: this.addIngredientHandler,\n        removeIngredients: this.removeIngredientHandler,\n        disabled: disableInfo,\n        price: this.state.price,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        price: this.state.price,\n        cancelingPurchase: this.purchaseCancelHandler,\n        continuingPurchase: this.purchaseContinueHandler,\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      closing: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, orderSummary));\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","axios","withErrorHandler","INGREDIENTS_PRICE","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","price","purchasable","purchasing","loading","error","updatePurchasable","sum","Object","values","reduce","el","setState","addIngredientHandler","type","updatedIngredients","updatedPrice","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","ingredient","customer","name","delivery","address","number","cep","country","post","then","response","catch","componentDidMount","get","data","render","disableInfo","keys","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler'\n\nconst INGREDIENTS_PRICE = {\n    salad: 1,\n    cheese: 1,\n    bacon: 1.5,\n    meat: 2\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: null,\n        price: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        axios.get('https://burger-builder-35ab4.firebaseio.com/ingredients.json')\n            .then((response) => {\n                this.setState({ingredients: response.data})\n            })\n            .catch((error) => {\n                this.setState({error: true})\n            })\n    }\n    \n\n    updatePurchasable = ingredients => {\n        const sum = Object.values(ingredients)\n            .reduce((sum, el) => sum += el, 0)\n\n        this.setState({purchasable: sum > 0})    \n    }\n\n    addIngredientHandler = type => {\n        const updatedIngredients = {...this.state.ingredients}\n        updatedIngredients[type] += 1\n        \n        const updatedPrice = this.state.price + INGREDIENTS_PRICE[type]\n\n        this.setState({price: updatedPrice, ingredients: updatedIngredients})\n        this.updatePurchasable(updatedIngredients)\n    }\n\n    removeIngredientHandler = type => {\n        const updatedIngredients = {...this.state.ingredients}\n\n        if (updatedIngredients[type] > 0) {\n            updatedIngredients[type] -= 1\n\n            const updatedPrice = this.state.price - INGREDIENTS_PRICE[type]\n            this.setState({price: updatedPrice, ingredients: updatedIngredients})\n        }\n        this.updatePurchasable(updatedIngredients)\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseContinueHandler = () => {\n        const order = {\n            ingredient: this.state.ingredients,\n            price: this.state.price,\n            customer: {\n                name: 'Thiaguin',\n                delivery: 'fastest',\n                address: {\n                    number: 371,\n                    cep: '58417-598',\n                    country: 'Brazil'  \n                }\n            }\n        }\n        this.setState({loading: true})\n        axios.post('/orders.json', order)\n            .then((response) => {\n                this.setState({loading: false, purchasing: false})\n            })\n            .catch((error) => {\n                this.setState({loading: false, purchasing: false})\n            })\n    }\n    render() {\n        const disableInfo = {}\n\n        for (const ingredient of Object.keys(this.state.ingredients)) {\n            disableInfo[ingredient] = this.state.ingredients[ingredient] <= 0\n        }\n        let orderSummary = null\n\n        if (this.state.loading) {\n            orderSummary =<Spinner/>\n        }    \n\n        let burger = <Spinner/>\n\n        if (this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls \n                        addIngredients={this.addIngredientHandler}\n                        removeIngredients={this.removeIngredientHandler}\n                        disabled={disableInfo}\n                        price={this.state.price}\n                        ordered={this.purchaseHandler}\n                        purchasable={this.state.purchasable}\n                    />\n                </Aux>\n            )\n\n            orderSummary = (\n                <OrderSummary \n                    price={this.state.price}\n                    cancelingPurchase={this.purchaseCancelHandler}\n                    continuingPurchase={this.purchaseContinueHandler}\n                    ingredients={this.state.ingredients}/>\n            )\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} closing={this.purchaseCancelHandler}> \n                    {orderSummary}\n                </Modal>\n            </Aux>\n        )\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios)"]},"metadata":{},"sourceType":"module"}