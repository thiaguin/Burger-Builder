{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport { element } from 'prop-types';\nconst INGREDIENTS_PRICE = {\n  salad: 1,\n  cheese: 1,\n  bacon: 1.5,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      price: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.updatePurchasable = ingredients => {\n      const sum = Object.values(ingredients).reduce((sum, el) => sum += el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] += 1;\n      const updatedPrice = this.state.price + INGREDIENTS_PRICE[type];\n      this.setState({\n        price: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredients = { ...this.state.ingredients\n      };\n\n      if (updatedIngredients[type] > 0) {\n        updatedIngredients[type] -= 1;\n        const updatedPrice = this.state.price - INGREDIENTS_PRICE[type];\n        this.setState({\n          price: updatedPrice,\n          ingredients: updatedIngredients\n        });\n      }\n\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n  }\n\n  render() {\n    const disableInfo = {};\n\n    for (const ingredient of Object.keys(this.state.ingredients)) {\n      disableInfo[ingredient] = this.state.ingredients[ingredient] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      addIngredients: this.addIngredientHandler,\n      removeIngredients: this.removeIngredientHandler,\n      disabled: disableInfo,\n      price: this.state.price,\n      ordered: this.purchaseHandler,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","element","INGREDIENTS_PRICE","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","price","purchasable","purchasing","updatePurchasable","sum","Object","values","reduce","el","setState","addIngredientHandler","type","updatedIngredients","updatedPrice","removeIngredientHandler","purchaseHandler","render","disableInfo","ingredient","keys"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport { element } from 'prop-types'\n\nconst INGREDIENTS_PRICE = {\n    salad: 1,\n    cheese: 1,\n    bacon: 1.5,\n    meat: 2\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        price: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchasable = ingredients => {\n        const sum = Object.values(ingredients)\n            .reduce((sum, el) => sum += el, 0)\n\n        this.setState({purchasable: sum > 0})    \n    }\n\n    addIngredientHandler = type => {\n        const updatedIngredients = {...this.state.ingredients}\n        updatedIngredients[type] += 1\n        \n        const updatedPrice = this.state.price + INGREDIENTS_PRICE[type]\n\n        this.setState({price: updatedPrice, ingredients: updatedIngredients})\n        this.updatePurchasable(updatedIngredients)\n    }\n\n    removeIngredientHandler = type => {\n        const updatedIngredients = {...this.state.ingredients}\n\n        if (updatedIngredients[type] > 0) {\n            updatedIngredients[type] -= 1\n\n            const updatedPrice = this.state.price - INGREDIENTS_PRICE[type]\n            this.setState({price: updatedPrice, ingredients: updatedIngredients})\n        }\n        this.updatePurchasable(updatedIngredients)\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    render() {\n        const disableInfo = {}\n\n        for (const ingredient of Object.keys(this.state.ingredients)) {\n            disableInfo[ingredient] = this.state.ingredients[ingredient] <= 0\n        }\n\n        return (\n            <Aux>\n                <Modal>\n                    <OrderSummary ingredients={this.state.ingredients}/>\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls \n                    addIngredients={this.addIngredientHandler}\n                    removeIngredients={this.removeIngredientHandler}\n                    disabled={disableInfo}\n                    price={this.state.price}\n                    ordered={this.purchaseHandler}\n                    purchasable={this.state.purchasable}\n                />\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}