{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/react/burger-builder/src/hoc/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Aux from './Aux';\nimport Modal from '../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.closeErrorHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentDidMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.error,\n        closing: this.closeErrorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/thiago/Documentos/react/burger-builder/src/hoc/withErrorHandler.js"],"names":["React","Component","Aux","Modal","withErrorHandler","WrappedComponent","axios","state","error","closeErrorHandler","setState","componentDidMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","componentWillUnmount","eject","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AAClD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAwB3BC,iBAxB2B,GAwBP,MAAM;AACtB,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OA1B0B;AAAA;;AAK3BG,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AAC1D,aAAKN,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOQ,GAAP;AACH,OAHqB,CAAtB;AAKA,WAAKC,cAAL,GAAsBX,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CACjBI,GAAD,IAASA,GADS,EAEjBX,KAAD,IAAW;AACP,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH,OAJiB,CAAtB;AAMH;;AAEDY,IAAAA,oBAAoB,GAAG;AACnBd,MAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAiC,KAAKT,cAAtC;AACAN,MAAAA,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAkC,KAAKJ,cAAvC;AACH;;AAMDK,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,KAAxB;AAA+B,QAAA,OAAO,EAAE,KAAKC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,OAApC,GAA8C,IADnD,CADJ,EAII,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADJ;AAQH;;AArC0B,GAA/B;AAuCH,CAxCD;;AA0CA,eAAepB,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport Aux from './Aux'\nimport Modal from '../components/UI/Modal/Modal'\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentDidMount() {\n            this.reqInterceptor = axios.interceptors.request.use((req) => {\n                this.setState({ error: null })\n                return req\n            })\n\n            this.resInterceptor = axios.interceptors.response.use(\n                (res) => res,\n                (error) => {\n                    this.setState({ error: error })\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor)\n            axios.interceptors.response.eject(this.resInterceptor)\n        }\n\n        closeErrorHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal show={this.state.error} closing={this.closeErrorHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler\n"]},"metadata":{},"sourceType":"module"}